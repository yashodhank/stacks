# docker stack deploy -c traefik.yml traefik

version: '3.8'

services:
  traefik:
    image: traefik:${VERSION:-v2}
    command:
      - --log.level=DEBUG
      - --accesslog=true
      - --accesslog.filepath=/var/log/traefik/access.log
      - --providers.docker
      - --providers.docker.network=traefik-net
      - --providers.docker.exposedByDefault=false
      - --providers.docker.swarmMode=true
      - --providers.docker.endpoint=unix:///var/run/docker.sock
      - --entrypoints.https.http.middlewares=crowdsec-bouncer@docker
      - --entrypoints.https.proxyProtocol.trustedIPs=${TRUSTED_IPS:-10.0.0.0/8,127.0.0.1/8,173.245.48.0/20,103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,141.101.64.0/18,108.162.192.0/18,190.93.240.0/20,188.114.96.0/20,197.234.240.0/22,198.41.128.0/17,162.158.0.0/15,104.16.0.0/13,104.24.0.0/14,172.64.0.0/13,131.0.72.0/22,173.245.48.0/20,103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,141.101.64.0/18,108.162.192.0/18,190.93.240.0/20,188.114.96.0/20,197.234.240.0/22,198.41.128.0/17,162.158.0.0/15,104.16.0.0/13,104.24.0.0/14,172.64.0.0/13,131.0.72.0/22}
      - --entrypoints.https.forwardedHeaders.trustedIPs=${TRUSTED_IPS:-10.0.0.0/8,127.0.0.1/8,173.245.48.0/20,103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,141.101.64.0/18,108.162.192.0/18,190.93.240.0/20,188.114.96.0/20,197.234.240.0/22,198.41.128.0/17,162.158.0.0/15,104.16.0.0/13,104.24.0.0/14,172.64.0.0/13,131.0.72.0/22,173.245.48.0/20,103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,141.101.64.0/18,108.162.192.0/18,190.93.240.0/20,188.114.96.0/20,197.234.240.0/22,198.41.128.0/17,162.158.0.0/15,104.16.0.0/13,104.24.0.0/14,172.64.0.0/13,131.0.72.0/22}
      - --entrypoints.https.address=:443
      - --entrypoints.http.address=:80
      - --entrypoints.http.proxyProtocol.trustedIPs=${TRUSTED_IPS:-10.0.0.0/8,127.0.0.1/8,173.245.48.0/20,103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,141.101.64.0/18,108.162.192.0/18,190.93.240.0/20,188.114.96.0/20,197.234.240.0/22,198.41.128.0/17,162.158.0.0/15,104.16.0.0/13,104.24.0.0/14,172.64.0.0/13,131.0.72.0/22,173.245.48.0/20,103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,141.101.64.0/18,108.162.192.0/18,190.93.240.0/20,188.114.96.0/20,197.234.240.0/22,198.41.128.0/17,162.158.0.0/15,104.16.0.0/13,104.24.0.0/14,172.64.0.0/13,131.0.72.0/22}
      - --entrypoints.http.forwardedHeaders.trustedIPs=${TRUSTED_IPS:-10.0.0.0/8,127.0.0.1/8,173.245.48.0/20,103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,141.101.64.0/18,108.162.192.0/18,190.93.240.0/20,188.114.96.0/20,197.234.240.0/22,198.41.128.0/17,162.158.0.0/15,104.16.0.0/13,104.24.0.0/14,172.64.0.0/13,131.0.72.0/22,173.245.48.0/20,103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,141.101.64.0/18,108.162.192.0/18,190.93.240.0/20,188.114.96.0/20,197.234.240.0/22,198.41.128.0/17,162.158.0.0/15,104.16.0.0/13,104.24.0.0/14,172.64.0.0/13,131.0.72.0/22}
      - --entrypoints.http.http.redirections.entryPoint.to=https
      - --entrypoints.http.http.redirections.entryPoint.scheme=https
      - --entrypoints.http.http.redirections.entrypoint.permanent=true
      # - --certificatesresolvers.letsencrypt.acme.tlschallenge=true
      # - --certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL:-www.biso.work@gmail.com}
      # - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
      - --certificatesResolvers.dns-cloudflare.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory # LetsEncrypt Staging Server - uncomment when testing
      - --certificatesResolvers.dns-cloudflare.acme.email=${CLOUDFLARE_EMAIL:-www.biso.work@gmail.com}
      - --certificatesResolvers.dns-cloudflare.acme.storage=/letsencrypt/acme.json
      - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.provider=cloudflare
      - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.resolvers=1.1.1.1:53,1.0.0.1:53
      - --api.dashboard=${API_DASHBOARD:-true} # Enable Dashboard
      - --api.insecure=false
      - --api.debug=${API_DEBUG:-false}
    environment:
      - CF_API_EMAIL=${CLOUDFLARE_EMAIL:-www.biso.work@gmail.com}
      - CF_DNS_API_TOKEN=${CLOUDFLARE_API_KEY?Variable not set}
    volumes:
      - ${VOLUME_PATH}letsencrypt:/letsencrypt
      - ${VOLUME_PATH}logs:/var/log/traefik/
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - {target: 80, published: 80, mode: host, protocol: tcp}
      - {target: 443, published: 443, mode: host, protocol: tcp}
    deploy:
      mode: ${MODE:-global}
      placement:
        constraints:
          - node.role==manager
      labels:
        - traefik.enable=true
        - traefik.http.routers.traefik-rtr.entrypoints=https
        - traefik.http.routers.traefik-rtr.rule=Host(`traefik-admin.${DOMAIN:-traefik.localhost}`) || PathPrefix(`/api`) || PathPrefix(`/dashboard`)
        # - traefik.http.routers.api.tls.certresolver=letsencrypt
        - traefik.http.services.traefik-rtr.loadbalancer.server.port=8080 # Fix missing port here
        # Crowdsec bouncer forwarder
        - traefik.http.middlewares.crowdsec-bouncer.forwardauth.address=http://crowdsec-bouncer:8083/api/v1/forwardAuth
        - traefik.http.middlewares.crowdsec-bouncer.forwardauth.trustForwardHeader=true
        # - traefik.http.routers.traefik.tls.domains[0].main=${DOMAIN:-traefik.localhost}
        # - traefik.http.routers.traefik.tls.domains[0].sans=*.${DOMAIN:-traefik.localhost}
        # HTTP Routers
        - traefik.http.routers.traefik-rtr.tls=true
        - traefik.http.routers.traefik-rtr.tls.certresolver=dns-cloudflare # Comment out this line after first run of traefik to force the use of wildcard certs
        - traefik.http.routers.traefik-rtr.tls.domains[0].main=${DOMAIN:-traefik.localhost}
        - traefik.http.routers.traefik-rtr.tls.domains[0].sans=*.${DOMAIN:-traefik.localhost}
        # - "traefik.http.routers.traefik-rtr.tls.domains[1].main=$SECONDDOMAINNAME" # Pulls main cert for second domain
        # - "traefik.http.routers.traefik-rtr.tls.domains[1].sans=*.$SECONDDOMAINNAME" # Pulls wildcard cert for second domain
        ## Services - API
        - traefik.http.routers.traefik-rtr.service=api@internal
        ## Middlewares
        - traefik.http.routers.traefik-rtr.middlewares=middlewares-basic-auth,crowdsec-bouncer
        - traefik.http.middlewares.middlewares-basic-auth.basicauth.users=${USERNAME?Variable not set}:${HASHED_PASSWORD?Variable not set}

volumes:
  letsencrypt:

networks:
  default:
    external: true
    name: traefik-net